#!/usr/bin/env python3
# -*- coding:utf-8 -*-

from byecha.chapi import ChaPi
from byecha.byecha import ByeCha

import os
import shutil
import json
from argparse import ArgumentParser
from getpass import getpass
import tempfile


def main():
    ap = ArgumentParser()
    ap.add_argument('command', help='command (list / zap)')
    ap.add_argument('-u', '--uid', help='your chatwork id (mail address)')
    ap.add_argument('-p', '--password', help='your chatwork password')
    ap.add_argument('-r', '--room', help='room id you want to zap (zap only)')

    args = ap.parse_args()
    if args.uid:
        user_id = args.uid
    else:
        user_id = input('User ID : ')
    if args.password:
        password = args.password
    else:
        password = getpass('Password for ' + user_id + ': ')
    if args.command == 'zap':
        if args.room:
            room_id = args.room
        else:
            room_id = input('target room id: ')
    elif args.command != 'list':
        print('unknown command: ' + args.command)
        return 1

    cp = ChaPi(user_id=user_id, password=password)
    api_token = cp.get_token()
    print('API Token: ' + api_token)

    if args.command == 'list':
        rooms = cp.get_rooms()
        print('[room_id] : [room_name]')
        for room in rooms:
            print(str(room['room_id']) + ' : ' + room['name'])
    elif args.command == 'zap':

        with tempfile.TemporaryDirectory() as tmp_dir:
            out_dir = tmp_dir
            bc = ByeCha(user_id=user_id, password=password, out_dir=out_dir)
            bc.login()
            print('fetching all chats (chat_id: ' + str(room_id) + ') ...')
            bc.fetch_all_chat(room_id)
            room_dir = os.path.join(out_dir, str(room_id))
            for fname in os.listdir(room_dir):
                path = os.path.join(room_dir, fname)
                with open(path) as f:
                    msgs = json.load(f)
                    for msg in msgs:
                        msg_id = msg['id']
                        print('deleting msg [id: ' + str(msg_id) + '] ...')
                        result = cp.delete_message(room_id=room_id, message_id=msg_id)
                        if 'errors' not in result:
                            print('deleted [id: ]' + str(msg_id) + ']')
                        else:
                            print('error: ' + str(result['errors']) + ' [id: ' + str(msg_id) + ']')


if __name__ == '__main__':
    main()
